name: Tests

on:
    push:
    pull_request:
    schedule:
        - cron: '0 */12 * * *'

jobs:
    test:
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[ci skip]')"

        strategy:
            fail-fast: false
            matrix:
                laravel: [7.*, 8.*]
                php: [7.2, 7.3, 7.4, 8.0]
                service: ['mysql:8', 'mysql:5.7']
                dependency-version: [prefer-lowest, prefer-stable]
                experimental: [false, true]

                include:
                    - service: 'mysql:8'
                      db: MySQL8
                    - service: 'mysql:5.7'
                      db: MySQL5

                exclude:
                    - laravel: 8.*
                      php: 7.2
                    - php: 7.2
                      experimental: true
                    - php: 7.3
                      experimental: true
                    - php: 7.4
                      experimental: true
                    - php: 8.0
                      experimental: true

        name: 'PHP ${{ matrix.php }} / Laravel: ${{ matrix.laravel }} / ${{ matrix.dependency-version }} / ${{ matrix.db }}'

        continue-on-error: ${{ matrix.experimental }}

        env:
            COMPOSER_ARGS: ''

        steps:
            - uses: actions/checkout@master

            - name: Start Environment
              run: ./tenancy start ${{ matrix.php }} ${{ matrix.service }}

            - name: Setup Composer args
              if: ${{ matrix.experimental }}
              run: echo "COMPOSER_ARGS=--ignore-platform-reqs" >> $GITHUB_ENV

            - name: Install Version Specific Dependencies
              run: ./tenancy composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update ${{ env.COMPOSER_ARGS }}

            - name: Get Composer Cache Directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache Composer Downloads
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ matrix.php }}-${{ hashFiles('**/composer.json') }}-${{ matrix.dependency-version }}-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-composer-${{ matrix.php }}-${{ hashFiles('**/composer.json') }}-${{ matrix.dependency-version }}-
                      ${{ runner.os }}-composer-${{ matrix.php }}-${{ hashFiles('**/composer.json') }}-
                      ${{ runner.os }}-composer-${{ matrix.php }}-
                      ${{ runner.os }}-composer-

            - name: Install Composer dependencies
              run: ./tenancy composer update --no-ansi --no-interaction ${{ env.COMPOSER_ARGS }}

            - name: Run tests
              run: ./tenancy test
              continue-on-error: ${{ matrix.experimental }}
              env:
                  TENANCY_DB: testing
                  TENANCY_USERNAME: testing
                  TENANCY_PASSWORD: testing
                  APP_KEY: deela5kinohw0haekoothahSh8eexach
